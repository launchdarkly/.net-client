<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>FileComponents Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="FileComponents class" /><meta name="System.Keywords" content="LaunchDarkly.Client.Files.FileComponents class" /><meta name="Microsoft.Help.F1" content="LaunchDarkly.Client.Files.FileComponents" /><meta name="Microsoft.Help.Id" content="T:LaunchDarkly.Client.Files.FileComponents" /><meta name="Description" content="The entry point for the file data source, which allows you to use local files as a source of feature flag state." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="LaunchDarkly.Client.Files" /><meta name="file" content="T_LaunchDarkly_Client_Files_FileComponents" /><meta name="guid" content="T_LaunchDarkly_Client_Files_FileComponents" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">LaunchDarkly Server-Side SDK for .NET 5.14.0<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="LaunchDarkly Server-Side SDK for .NET 5.14.0" tocid="roottoc">LaunchDarkly Server-Side SDK for .NET 5.14.0</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_Documentation.htm" title="Namespaces" tocid="R_Project_Documentation">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_LaunchDarkly_Client_Files.htm" title="LaunchDarkly.Client.Files" tocid="N_LaunchDarkly_Client_Files">LaunchDarkly.Client.Files</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_LaunchDarkly_Client_Files_FileComponents.htm" title="FileComponents Class" tocid="T_LaunchDarkly_Client_Files_FileComponents">FileComponents Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_LaunchDarkly_Client_Files_FileComponents.htm" title="FileComponents Methods" tocid="Methods_T_LaunchDarkly_Client_Files_FileComponents">FileComponents Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>FileComponents Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            The entry point for the file data source, which allows you to use local files as a source of
            feature flag state.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST25B617AD_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">LaunchDarkly.Client.Files<span id="LST25B617AD_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>FileComponents</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_LaunchDarkly_Client_Files.htm">LaunchDarkly.Client.Files</a><br />
    <strong>Assembly:</strong>
   LaunchDarkly.ServerSdk (in LaunchDarkly.ServerSdk.dll) Version: 5.14.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">FileComponents</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">FileComponents</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">FileComponents</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_LaunchDarkly_Client_Files_FileComponents_FileDataSource.htm">FileDataSource</a></td><td><div class="summary">
            Creates a <a href="T_LaunchDarkly_Client_Files_FileDataSourceFactory.htm">FileDataSourceFactory</a> which you can use to configure the file data source.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
            This would typically be used in a test environment, to operate using a predetermined feature flag
            state without an actual LaunchDarkly connection.
            </p><p>
            To use this component, call <a href="M_LaunchDarkly_Client_Files_FileComponents_FileDataSource.htm">FileDataSource<span id="LST25B617AD_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> to obtain a factory object, call one or
            methods to configure it, and then add it to your LaunchDarkly client configuration. At a
            minimum, you will want to call <a href="M_LaunchDarkly_Client_Files_FileDataSourceFactory_WithFilePaths.htm">WithFilePaths(<span id="LST25B617AD_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_3?cpp=array&lt;");</script>String<span id="LST25B617AD_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_4?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a> to specify
            your data file(s); you can also use <a href="M_LaunchDarkly_Client_Files_FileDataSourceFactory_WithAutoUpdate.htm">WithAutoUpdate(Boolean)</a> to
            specify that flags should be reloaded when a file is modified. See <a href="T_LaunchDarkly_Client_Files_FileDataSourceFactory.htm">FileDataSourceFactory</a>
            for all configuration options.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EALABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EALABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EALABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> fileSource = FileComponents.FileDataSource()
    .WithFilePaths(<span class="highlight-literal">"./testData/flags.json"</span>)
    .WithAutoUpdate(<span class="highlight-keyword">true</span>);
<span class="highlight-keyword">var</span> config = Configuration.Builder(<span class="highlight-literal">"sdkKey"</span>)
    .UpdateProcessorFactory(fileSource)
    .Build();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EALABA");</script><p>
            This will cause the client <i>not</i> to connect to LaunchDarkly to get feature flags. The
            client may still make network connections to send analytics events, unless you have disabled
            this with <span class="code">configuration.WithEventProcessor(Components.NullEventProcessor)</span>.
            </p><p>
            Flag data files are JSON by default (although it is possible to specify a parser for another format,
            such as YAML; see <a href="M_LaunchDarkly_Client_Files_FileDataSourceFactory_WithParser.htm">WithParser(Func<span id="LST25B617AD_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>String, Object<span id="LST25B617AD_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25B617AD_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a>). They
            contain an object with three possible properties:
            </p><ul><li><span class="code">flags</span>: Feature flag definitions.</li><li><span class="code">flagVersions</span>: Simplified feature flags that contain only a value.</li><li><span class="code">segments</span>: User segment definitions.</li></ul><p>
            The format of the data in <span class="code">flags</span> and <span class="code">segments</span> is defined by the LaunchDarkly application
            and is subject to change. Rather than trying to construct these objects yourself, it is simpler
            to request existing flags directly from the LaunchDarkly server in JSON format, and use this
            output as the starting point for your file. In Linux you would do this:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAGABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAGABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAGABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">curl -H <span class="highlight-literal">"Authorization: {your sdk key}"</span> https:<span class="highlight-comment">//app.launchdarkly.com/sdk/latest-all</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAGABA");</script><p>
            The output will look something like this (but with many more properties):
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">{
    <span class="highlight-literal">"flags"</span>: {
        <span class="highlight-literal">"flag-key-1"</span>: {
            <span class="highlight-literal">"key"</span>: <span class="highlight-literal">"flag-key-1"</span>,
            <span class="highlight-literal">"on"</span>: <span class="highlight-keyword">true</span>,
            <span class="highlight-literal">"variations"</span>: [ <span class="highlight-literal">"a"</span>, <span class="highlight-literal">"b"</span> ]
        }
    },
    <span class="highlight-literal">"segments"</span>: {
        <span class="highlight-literal">"segment-key-1"</span>: {
            <span class="highlight-literal">"key"</span>: <span class="highlight-literal">"segment-key-1"</span>,
            <span class="highlight-literal">"includes"</span>: [ <span class="highlight-literal">"user-key-1"</span> ]
        }
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEABA");</script><p>
            Data in this format allows the SDK to exactly duplicate all the kinds of flag behavior supported
            by LaunchDarkly. However, in many cases you will not need this complexity, but will just want to
            set specific flag keys to specific values. For that, you can use a much simpler format:
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">{
    <span class="highlight-literal">"flagValues"</span>: {
        <span class="highlight-literal">"my-string-flag-key"</span>: <span class="highlight-literal">"value-1"</span>,
        <span class="highlight-literal">"my-boolean-flag-key"</span>: <span class="highlight-keyword">true</span>,
        <span class="highlight-literal">"my-integer-flag-key"</span>: <span class="highlight-number">3</span>
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script><p>
            It is also possible to specify both <span class="code">flags</span> and <span class="code">flagValues</span>, if you want some flags
            to have simple values and others to have complex behavior. However, it is an error to use the
            same flag key or segment key more than once, either in a single file or across multiple files.
            </p><p>
            If the data source encounters any error in any file-- malformed content, a missing file, or a
            duplicate key-- it will not load flags from any of the files.
            </p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_LaunchDarkly_Client_Files.htm">LaunchDarkly.Client.Files Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>